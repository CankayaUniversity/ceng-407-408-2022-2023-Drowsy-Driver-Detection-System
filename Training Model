{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f3c69b4d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-28T08:33:51.434806Z",
     "iopub.status.busy": "2023-02-28T08:33:51.433016Z",
     "iopub.status.idle": "2023-02-28T08:33:51.453789Z",
     "shell.execute_reply": "2023-02-28T08:33:51.452862Z"
    },
    "papermill": {
     "duration": 0.037686,
     "end_time": "2023-02-28T08:33:51.455990",
     "exception": false,
     "start_time": "2023-02-28T08:33:51.418304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras import layers\n",
    "\n",
    "data_augmentation = tf.keras.Sequential(\n",
    "  [\n",
    "    layers.RandomRotation(0.1),\n",
    "    layers.RandomZoom(0.1),\n",
    "    layers.ReLU(max_value=None, negative_slope=0.0, threshold=0.0),\n",
    "    layers.RandomFlip(\"horizontal\",input_shape=(img_height,img_width,3))\n",
    "  ]\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "70e341dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-28T08:33:51.483659Z",
     "iopub.status.busy": "2023-02-28T08:33:51.483313Z",
     "iopub.status.idle": "2023-02-28T08:34:08.854892Z",
     "shell.execute_reply": "2023-02-28T08:34:08.853437Z"
    },
    "papermill": {
     "duration": 17.388992,
     "end_time": "2023-02-28T08:34:08.858028",
     "exception": false,
     "start_time": "2023-02-28T08:33:51.469036",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting git+https://github.com/qubvel/segmentation_models\r\n",
      "  Cloning https://github.com/qubvel/segmentation_models to /tmp/pip-req-build-a7fahoq0\r\n",
      "  Running command git clone --filter=blob:none --quiet https://github.com/qubvel/segmentation_models /tmp/pip-req-build-a7fahoq0\r\n",
      "  Resolved https://github.com/qubvel/segmentation_models to commit e951c6747f75fa9e7240816d1c79dd2e66813123\r\n",
      "  Running command git submodule update --init --recursive -q\r\n",
      "  Preparing metadata (setup.py) ... \u001b[?25l-\b \bdone\r\n",
      "\u001b[?25hCollecting keras_applications<=1.0.8,>=1.0.7\r\n",
      "  Downloading Keras_Applications-1.0.8-py3-none-any.whl (50 kB)\r\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.7/50.7 kB\u001b[0m \u001b[31m221.2 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hCollecting image-classifiers==1.0.0\r\n",
      "  Downloading image_classifiers-1.0.0-py3-none-any.whl (19 kB)\r\n",
      "Collecting efficientnet==1.0.0\r\n",
      "  Downloading efficientnet-1.0.0-py3-none-any.whl (17 kB)\r\n",
      "Requirement already satisfied: scikit-image in /opt/conda/lib/python3.7/site-packages (from efficientnet==1.0.0->segmentation-models==1.0.1) (0.19.3)\r\n",
      "Requirement already satisfied: numpy>=1.9.1 in /opt/conda/lib/python3.7/site-packages (from keras_applications<=1.0.8,>=1.0.7->segmentation-models==1.0.1) (1.21.6)\r\n",
      "Requirement already satisfied: h5py in /opt/conda/lib/python3.7/site-packages (from keras_applications<=1.0.8,>=1.0.7->segmentation-models==1.0.1) (3.8.0)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.7/site-packages (from scikit-image->efficientnet==1.0.0->segmentation-models==1.0.1) (23.0)\r\n",
      "Requirement already satisfied: networkx>=2.2 in /opt/conda/lib/python3.7/site-packages (from scikit-image->efficientnet==1.0.0->segmentation-models==1.0.1) (2.6.3)\r\n",
      "Requirement already satisfied: tifffile>=2019.7.26 in /opt/conda/lib/python3.7/site-packages (from scikit-image->efficientnet==1.0.0->segmentation-models==1.0.1) (2021.11.2)\r\n",
      "Requirement already satisfied: pillow!=7.1.0,!=7.1.1,!=8.3.0,>=6.1.0 in /opt/conda/lib/python3.7/site-packages (from scikit-image->efficientnet==1.0.0->segmentation-models==1.0.1) (9.4.0)\r\n",
      "Requirement already satisfied: PyWavelets>=1.1.1 in /opt/conda/lib/python3.7/site-packages (from scikit-image->efficientnet==1.0.0->segmentation-models==1.0.1) (1.3.0)\r\n",
      "Requirement already satisfied: scipy>=1.4.1 in /opt/conda/lib/python3.7/site-packages (from scikit-image->efficientnet==1.0.0->segmentation-models==1.0.1) (1.7.3)\r\n",
      "Requirement already satisfied: imageio>=2.4.1 in /opt/conda/lib/python3.7/site-packages (from scikit-image->efficientnet==1.0.0->segmentation-models==1.0.1) (2.25.0)\r\n",
      "Building wheels for collected packages: segmentation-models\r\n",
      "  Building wheel for segmentation-models (setup.py) ... \u001b[?25l-\b \bdone\r\n",
      "\u001b[?25h  Created wheel for segmentation-models: filename=segmentation_models-1.0.1-py3-none-any.whl size=33809 sha256=35c79c0d43d9fe53526728c48c60b9f90826b08a616a3816e48d887d880d5425\r\n",
      "  Stored in directory: /tmp/pip-ephem-wheel-cache-wk89v3zt/wheels/02/cd/18/61c0bbb8766acfec68f9d20618886b7b38dfeeb95865b6ba00\r\n",
      "Successfully built segmentation-models\r\n",
      "Installing collected packages: keras_applications, image-classifiers, efficientnet, segmentation-models\r\n",
      "Successfully installed efficientnet-1.0.0 image-classifiers-1.0.0 keras_applications-1.0.8 segmentation-models-1.0.1\r\n",
      "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\r\n",
      "\u001b[0mNote: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "#pip install git+https://github.com/qubvel/segmentation_models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1b5367af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-28T08:34:08.894499Z",
     "iopub.status.busy": "2023-02-28T08:34:08.893535Z",
     "iopub.status.idle": "2023-02-28T08:34:18.816978Z",
     "shell.execute_reply": "2023-02-28T08:34:18.815931Z"
    },
    "papermill": {
     "duration": 9.944322,
     "end_time": "2023-02-28T08:34:18.819907",
     "exception": false,
     "start_time": "2023-02-28T08:34:08.875585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://github.com/Callidior/keras-applications/releases/download/efficientnet/efficientnet-b3_weights_tf_dim_ordering_tf_kernels_autoaugment_notop.h5\n",
      "44107200/44107200 [==============================] - 4s 0us/step\n"
     ]
    }
   ],
   "source": [
    "import efficientnet.tfkeras as efn\n",
    "model = tf.keras.Sequential([data_augmentation,\n",
    "      layers.Rescaling(1./255),\n",
    "                             efn.EfficientNetB3(input_shape=(256, 256, 3),\n",
    "                                                    weights='imagenet',\n",
    "                                                    include_top=False),\n",
    "                                 layers.GlobalAveragePooling2D(),\n",
    "                                 layers.BatchNormalization(),\n",
    "                                 layers.Dense(4,\n",
    "                                         activation='softmax')])\n",
    "    \n",
    "    \n",
    "        \n",
    "early_stopping = tf.keras.callbacks.EarlyStopping(patience=10,\n",
    "                                                  monitor=\"val_loss\",\n",
    "                                                  verbose=2,\n",
    "                                                  mode=\"auto\")\n",
    "checkpoint = tf.keras.callbacks.ModelCheckpoint(\"best.h5\", \n",
    "                                                monitor=\"val_loss\",\n",
    "                                                mode=\"auto\",\n",
    "                                                verbose=2,\n",
    "                                                save_best_only=True)\n",
    "model.compile(optimizer='adam',\n",
    "              loss = 'sparse_categorical_crossentropy',\n",
    "              metrics=['accuracy'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7010f8be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-28T08:34:18.856392Z",
     "iopub.status.busy": "2023-02-28T08:34:18.856072Z",
     "iopub.status.idle": "2023-02-28T08:48:02.362853Z",
     "shell.execute_reply": "2023-02-28T08:48:02.361798Z"
    },
    "papermill": {
     "duration": 823.586999,
     "end_time": "2023-02-28T08:48:02.425109",
     "exception": false,
     "start_time": "2023-02-28T08:34:18.838110",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/32\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-02-28 08:34:50.542722: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:954] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape insequential_1/efficientnet-b3/block1b_drop/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "62/62 [==============================] - ETA: 0s - loss: 0.3014 - accuracy: 0.9145\n",
      "Epoch 1: val_loss improved from inf to 0.53625, saving model to best.h5\n",
      "62/62 [==============================] - 128s 912ms/step - loss: 0.3014 - accuracy: 0.9145 - val_loss: 0.5362 - val_accuracy: 0.8152\n",
      "Epoch 2/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0606 - accuracy: 0.9818\n",
      "Epoch 2: val_loss improved from 0.53625 to 0.22548, saving model to best.h5\n",
      "62/62 [==============================] - 52s 831ms/step - loss: 0.0606 - accuracy: 0.9818 - val_loss: 0.2255 - val_accuracy: 0.9654\n",
      "Epoch 3/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0418 - accuracy: 0.9870\n",
      "Epoch 3: val_loss improved from 0.22548 to 0.01198, saving model to best.h5\n",
      "62/62 [==============================] - 52s 823ms/step - loss: 0.0418 - accuracy: 0.9870 - val_loss: 0.0120 - val_accuracy: 0.9977\n",
      "Epoch 4/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0260 - accuracy: 0.9935\n",
      "Epoch 4: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 815ms/step - loss: 0.0260 - accuracy: 0.9935 - val_loss: 0.0288 - val_accuracy: 0.9977\n",
      "Epoch 5/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0179 - accuracy: 0.9959\n",
      "Epoch 5: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 817ms/step - loss: 0.0179 - accuracy: 0.9959 - val_loss: 0.0722 - val_accuracy: 0.9885\n",
      "Epoch 6/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0452 - accuracy: 0.9874\n",
      "Epoch 6: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 818ms/step - loss: 0.0452 - accuracy: 0.9874 - val_loss: 0.0759 - val_accuracy: 0.9792\n",
      "Epoch 7/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0453 - accuracy: 0.9891\n",
      "Epoch 7: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 813ms/step - loss: 0.0453 - accuracy: 0.9891 - val_loss: 0.0912 - val_accuracy: 0.9908\n",
      "Epoch 8/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0378 - accuracy: 0.9895\n",
      "Epoch 8: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 808ms/step - loss: 0.0378 - accuracy: 0.9895 - val_loss: 0.1354 - val_accuracy: 0.9700\n",
      "Epoch 9/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0376 - accuracy: 0.9899\n",
      "Epoch 9: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 50s 800ms/step - loss: 0.0376 - accuracy: 0.9899 - val_loss: 0.0363 - val_accuracy: 0.9931\n",
      "Epoch 10/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0185 - accuracy: 0.9951\n",
      "Epoch 10: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 807ms/step - loss: 0.0185 - accuracy: 0.9951 - val_loss: 0.0423 - val_accuracy: 0.9931\n",
      "Epoch 11/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0090 - accuracy: 0.9972\n",
      "Epoch 11: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 816ms/step - loss: 0.0090 - accuracy: 0.9972 - val_loss: 0.0481 - val_accuracy: 0.9931\n",
      "Epoch 12/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0101 - accuracy: 0.9976\n",
      "Epoch 12: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 820ms/step - loss: 0.0101 - accuracy: 0.9976 - val_loss: 0.0460 - val_accuracy: 0.9931\n",
      "Epoch 13/32\n",
      "62/62 [==============================] - ETA: 0s - loss: 0.0131 - accuracy: 0.9955\n",
      "Epoch 13: val_loss did not improve from 0.01198\n",
      "62/62 [==============================] - 51s 813ms/step - loss: 0.0131 - accuracy: 0.9955 - val_loss: 0.0318 - val_accuracy: 0.9908\n",
      "Epoch 13: early stopping\n"
     ]
    }
   ],
   "source": [
    "\n",
    "history = model.fit(\n",
    "    training_ds,\n",
    "    validation_data=testing_ds,\n",
    "    epochs=32,\n",
    "    callbacks=[early_stopping,checkpoint]\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "57277a7f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-28T08:48:02.548986Z",
     "iopub.status.busy": "2023-02-28T08:48:02.548253Z",
     "iopub.status.idle": "2023-02-28T08:48:33.342735Z",
     "shell.execute_reply": "2023-02-28T08:48:33.341743Z"
    },
    "papermill": {
     "duration": 30.921238,
     "end_time": "2023-02-28T08:48:33.407819",
     "exception": false,
     "start_time": "2023-02-28T08:48:02.486581",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 800x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "acc = history.history['accuracy']\n",
    "val_acc = history.history['val_accuracy']\n",
    "epochs = len(acc)\n",
    "\n",
    "loss = history.history['loss']\n",
    "val_loss = history.history['val_loss']\n",
    "\n",
    "epochs_range = range(epochs)\n",
    "\n",
    "plt.figure(figsize=(8, 8))\n",
    "plt.subplot(1, 2, 1)\n",
    "plt.plot(epochs_range, acc, label='Training Accuracy')\n",
    "plt.plot(epochs_range, val_acc, label='Validation Accuracy')\n",
    "plt.legend(loc='lower right')\n",
    "plt.title('Training and Validation Accuracy')\n",
    "\n",
    "plt.subplot(1, 2, 2)\n",
    "plt.plot(epochs_range, loss, label='Training Loss')\n",
    "plt.plot(epochs_range, val_loss, label='Validation Loss')\n",
    "plt.legend(loc='upper right')\n",
    "plt.title('Training and Validation Loss')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 916.14064,
   "end_time": "2023-02-28T08:48:44.102117",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-02-28T08:33:27.961477",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
